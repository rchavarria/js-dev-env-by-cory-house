"Note","Course","Module","Clip","Time in Clip","URL"
"A starter kit (development environment) is an automated **checklist**","Building a JavaScript Development Environment","You Need a Starter Kit","A Starter Kit Is an Automated Checklist","0:05","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m1&clip=1&mode=live&start=5.247505&noteid=d7094ad0-119f-4c2d-bd64-d23863181cf1"
"¿Por qué usar un checklist? Creemos que podemos memorizar todos los pasos, pero NO.","Building a JavaScript Development Environment","You Need a Starter Kit","A Starter Kit Is an Automated Checklist","1:03","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m1&clip=1&mode=live&start=63.953038&noteid=558d24f8-0321-434b-a417-440e9b9e2db7"
"Los desarrolladores saben qué es lo que hay que hacer, pero bajo presión o con las prisas es muy fácil olvidar algún paso","Building a JavaScript Development Environment","You Need a Starter Kit","A Starter Kit Is an Automated Checklist","2:03","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m1&clip=1&mode=live&start=123.147959&noteid=0ee899d4-3647-4d74-8629-9e682e3f08e3"
"¿Qué debería contener un entorno de desarrollo? package management, bundling, minification, sourcemaps, transpiling, dynamic html generation, centralized http, mock api framework, component libraries (your components), development webserver, linting, automated testing, continuous integration, automated build, automated deployment, working example app","Building a JavaScript Development Environment","You Need a Starter Kit","What Belongs in Your Starter Kit?","1:15","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m1&clip=3&mode=live&start=75.832721&noteid=a6afb382-9589-41eb-99cd-286abf301483"
"JavaScript package managers:\n- bower: no goza de buena fama ahora, ya no se usa porque estaba pensado para la web si un paso de *compilación*\n- npm: la elección por defecto\n- jspm: acepta instalar dependencias de varias fuentes","Building a JavaScript Development Environment","Package Management","Package Managers","1:19","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m3&clip=1&mode=live&start=79.451609&noteid=799bff1b-c99c-4528-9e4b-556adfcd5f1a"
"You should check your packages for security reasons (because anybody can upload things to `npm`).\n\nNode Security Platform is Cory's choice:\n\n`npm install -g nsp`\n`nsp check`","Building a JavaScript Development Environment","Package Management","Package Security","0:11","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m3&clip=3&mode=live&start=11.538843&noteid=751131aa-d618-4794-8c94-d1c59215ed5e"
"`express` as Development Web Server","Building a JavaScript Development Environment","Development Web Server","Demo: Sharing Work-in-progress","1:44","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m4&clip=4&mode=live&start=104.263333&noteid=f666619d-bae2-4271-9899-2ec371bed77c"
"`localtunnel` as a tool to expose your local web server to the public. It creates a tunnel from a random URL (public) to your web server. Easy as a pie!!","Building a JavaScript Development Environment","Development Web Server","Demo: Sharing Work-in-progress","1:52","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m4&clip=4&mode=live&start=112.273582&noteid=9ef88dac-b2a9-43c7-b2ed-52ef2043886f"
"Automation tools: grunt (configuration over code), gulp (code over config, faster), npm scripts (use tools directly)","Building a JavaScript Development Environment","Automation","Automation Options","3:03","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m5&clip=1&mode=live&start=183.360544&noteid=1e950a92-b88c-425e-93f7-7a472c6918ab"
"Hay un par de paquetes/herramientas (babel-preset-***) que lo que hacen es mirar qué versión de NodeJS u otra plataforma (como Electron) estás usando y evitar transpilar todo el código a ES5.1 Así ahorra transpilar cierto código.","Building a JavaScript Development Environment","Transpiling","Babel Configuration","2:18","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m6&clip=3&mode=live&start=138.043513&noteid=bedff09d-729b-4997-910b-597e386fefe3"
"5 decisiones que hay que tomar a la hora de empezar con ESLint:\n1. Qué formato de configuración? package.json, .eslintrc, .eslintrc.js,...\n2. Qué reglas usar?\n3. Cada regla, debería lanzar un warning o un error?\n4. Plugins? para react, angular, node,...\n5. Y usar un preset?\nLas decisiones 2 y 3 es mejor tomarlas en equipo, para consensuarlas.","Building a JavaScript Development Environment","Linting","ESLint Configuration Decisions Overview","0:34","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m8&clip=3&mode=live&start=34.71434&noteid=14244bc2-9594-4d93-9328-1f89a64dec0b"
"6 decisiones a tomar a la hora de escribir tests unitarios:\n1. framework (mocha)\n2. librería de aserciones (chai)\n3. libreŕias de ayuda (jsdom)\n4. dónde ejecutarlos (node)\n5. dónde poner los ficheros de tests (alongside, together)\n6. cuándo ejecutarlos (on save)","Building a JavaScript Development Environment","Testing and Continuous Integration","Test Decisions Overview","1:28","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m9&clip=1&mode=live&start=88.265825&noteid=51bec48f-8be3-4565-8086-1a25561a9748"
"**jsdom**","Building a JavaScript Development Environment","Testing and Continuous Integration","Demo: DOM Testing","0:04","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m9&clip=9&mode=live&start=4.358393&noteid=38b31860-af00-4f0d-91f5-d3ded54b29bc"
"Un servidor de CI, entre otros beneficios, tiene el de **darse cuenta de los errores muy pronto** (normalmente antes que un humano).","Building a JavaScript Development Environment","Testing and Continuous Integration","Why Continuous Integration?","1:54","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m9&clip=11&mode=live&start=114.802317&noteid=9ab6e621-406f-4b67-b765-12584898cd25"
"Alternativas para hacer llamadas HTTP, dependiendo de la plataforma para la que estés programando:\n1. node: librería `request`\n2. navegador: fetch (el estándar)\n3. ambos: librería `axios`","Building a JavaScript Development Environment","HTTP Calls","HTTP Call Approaches","4:21","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m10&clip=1&mode=live&start=261.914317&noteid=afeeee37-b8b7-418a-8084-80186402a6e8"
"Best practice: centraliza tus llamadas a tu api:\n1. puedes configurar todas en un solo sitio\n2. manejo de errores\n3. un solo sitio donde mockear","Building a JavaScript Development Environment","HTTP Calls","Centralizing HTTP Requests","0:18","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m10&clip=2&mode=live&start=18.539211&noteid=e29001c3-22b5-4e4f-960f-e8efa1e11657"
"Plan para mockear HTTP:\n1. declarar el esquema de los datos (json schema faker)\n2. generar datos aleatorios: faker.js, chance.js o randexp.js\n3. servir los datos a través de un api: json server","Building a JavaScript Development Environment","HTTP Calls","Our Plan for Mocking","1:24","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m10&clip=7&mode=live&start=84.482863&noteid=c2cc47fb-ce1d-459f-9887-b2bc1f62c0f8"
"Project structure tips:\n1. Write JS code in .js files (do not use <script> tags). There won't be test, lint, reuse, transpile,...\n2. Consider organizing by feature (instead of by file type: components, data, models, views,...)\n3. Extract logic into POJOs (no framework code in your logic)","Building a JavaScript Development Environment","Project Structure","Tip 1: JS Belongs in a .js File","0:37","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m11&clip=2&mode=live&start=37.078598&noteid=2c657111-7872-4041-80db-5a9fa34b9d93"
"¿por qué es interesante tener un html un poco diferente en producción que en desarrollo? puedes referenciar bundles automáticamente, manejar distintos bundles dinámicamente, inyectar recursos específicos para producción, o minificar el html también.","Building a JavaScript Development Environment","Production Build","Dynamic HTML Generation","0:57","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m12&clip=6&mode=live&start=57.506284&noteid=4d67d2e9-b778-4521-a4c4-8b01314ba974"
"Vamos a usar un plugin para webpack llamado ""html-webpack-plugin""","Building a JavaScript Development Environment","Production Build","Demo: Dynamic HTML Generation","0:23","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m12&clip=7&mode=live&start=23.13108&noteid=536e5411-a5e1-4643-81a3-63b9f77a5dee"
"¿por qué tener varios bundles? acelerar la carga de la página inicial, evitar re-cargar todas las librerías (cuando hay un pequeño cambio en nuestro código)","Building a JavaScript Development Environment","Production Build","Bundle Splitting","0:38","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m12&clip=8&mode=live&start=38.085906&noteid=d215109e-8504-45e7-8145-838b77ab84da"
"¿por que usar ""bust cache""? Porque evitas que los navegadores te pregunten por nuevas versiones de tus bundles cacheados, acelerando la carga de la pagina.\n\nSe puede forzar a coger una nueva version haciendo que webpack genere el bundle con un nuevo y diferente nombre.","Building a JavaScript Development Environment","Production Build","Cache Busting","0:27","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m12&clip=10&mode=live&start=27.893938&noteid=86d160cf-11ae-41d8-b546-3b371dc4f587"
"Herramientas para detectar si hay un error de JS en producción: track.js, sentry, new relic, raygun.","Building a JavaScript Development Environment","Production Build","Error Logging","0:24","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m12&clip=13&mode=live&start=24.613854&noteid=9896ac2c-eae8-499b-887f-ab1142f1fbe4"
"Qué buscar? Error metadata (browser, stack trace, previous actions), Notifications (email,...), Analitics and filtering, Pricing.","Building a JavaScript Development Environment","Production Build","Error Logging","0:35","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m12&clip=13&mode=live&start=35.030996&noteid=bc9b3be5-75b6-4d5e-80d7-d1a0ed7acfaf"
"EmbeddedJS es un motor de plantillas HTML por defecto en Webpack. Permite generar HTML más o menos dinámicamente en un paso de webpack.","Building a JavaScript Development Environment","Production Build","Demo: HTML Templates via EmbeddedJS","1:07","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m12&clip=15&mode=live&start=67.138253&noteid=2ea01036-4b33-4408-bd5a-0dc95088cbb9"
"Production deploy, éste es el plan: separating UI from the API (client side from server side); hosting providers; automated deployment; handling starter kits updates;","Building a JavaScript Development Environment","Production Deploy","Intro","0:49","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=0&mode=live&start=49.114217&noteid=e8e717d3-d1c2-4aee-a274-8de1ea7757b1"
"¿por qué separar UI y API (cliente y servidor)? 1. es mas simple, UI solo despliega. 2. separa conceptos (equipos separados, menos para entender, escala back-end de forma separada) 3. UI es más barato de alojar (hosting) 4. Sirve UI desde un CDN. 5. PUede usar el lenguaje que quieras para el back-end","Building a JavaScript Development Environment","Production Deploy","Separating the UI and API","0:28","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=1&mode=live&start=28.609705&noteid=72e1c29b-7368-4cf0-ad19-9d7cf903fdcb"
"Utiliza Heroku para desplegar su back-end","Building a JavaScript Development Environment","Production Deploy","Demo: Automated API Deploy via Heroku","7:22","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=3&mode=live&start=442.640657&noteid=26947c68-4e83-48da-a9cd-8ed64ce3eb2b"
"el camino a producción: desarrollo (npm start), empaquetado de producción (npm run build), despliegue en producción (npm run deploy) (en lo que trabajaremos ahora en el curso)","Building a JavaScript Development Environment","Production Deploy","Demo: Automated UI Deploy via Surge","0:41","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=4&mode=live&start=41.612311&noteid=98264432-a83c-4c37-8fd4-d78247124b01"
"para el despliegue del front-end, con ficheros estáticos, usa Surge (http://surge.sh)","Building a JavaScript Development Environment","Production Deploy","Demo: Automated UI Deploy via Surge","1:00","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=4&mode=live&start=60.56392&noteid=60896d5e-9f16-4dc1-a467-7831122d2af5"
"¿cómo actualizar tu Starter Kit? yeoman, github, npm","Building a JavaScript Development Environment","Production Deploy","Starter Kit Update Approaches","0:32","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=5&mode=live&start=32.778163&noteid=91544729-5479-49e4-9002-3ad337ceaaea"
"GitHub: fork your project, update with pull from the original project","Building a JavaScript Development Environment","Production Deploy","Option 3: npm","0:00","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=8&mode=live&start=0.379886&noteid=4bbd1869-dece-4d31-bba6-283acc6f03b9"
"npm: encapsulate kit in an npm package. update npm package","Building a JavaScript Development Environment","Production Deploy","Option 3: npm","0:22","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=8&mode=live&start=22.075827&noteid=b4052ffb-43ce-4b23-939d-5c5f23dfd1ec"
"¿qué se puede centralizar? vamos, ¿qué es lo que voy a tener que ir actualizando de proyecto en proyecto?\n1. build/ directory (usando npm package)\n2. npm scripts en package.json (usará npm package)\n3. webpack.config files (an npm package)\n4. eslintrc (crear un preset para poder compartirlo)","Building a JavaScript Development Environment","Production Deploy","Option 3: npm","1:18","https://app.pluralsight.com/player?course=javascript-development-environment&author=cory-house&name=javascript-development-environment-m13&clip=8&mode=live&start=78.44356&noteid=23139071-3918-4e55-8123-e78c5dfba1b7"